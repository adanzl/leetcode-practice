{
	// Place your py workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Leetcode": {
		"scope": "python,py",
		"body": [
			"\"\"\"",
			"",
			"\"\"\"",
			"from typing import *",
			"from math import *",
			"from collections import *",
			"",
			"",
			"class Solution:",
			"    def func():",
			"        ans = 0",
			"        return ans",
			"",
			"",
			"if __name__ == '__main__':",
			"    # ",
			"    print(Solution().func())",
		],
		"prefix": "lc_template",
		"description": "Python leetcode template"
	},
	"Import typing": {
		"scope": "python,py",
		"body": [
			"\"\"\"",
			" * 链接：",
			"\"\"\"",
			"from typing import *",
			"",
			"",
			"",
			"",
			"if __name__ == '__main__':",
			"    # ",
			"    print(Solution().func())",
		],
		"prefix": "im_type",
		"description": "Python import"
	},
	"Import LCUTIL": {
		"scope": "python,py",
		"body": [
			"import sys, os",
			"sys.path.append(os.path.dirname(__file__) + '/../')",
			"from LCUtil import *",
		],
		"prefix": "im_util",
		"description": "Python import"
	}
}